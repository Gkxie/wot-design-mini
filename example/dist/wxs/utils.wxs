var variable = require("./variable.wxs");
var array = require("./array.wxs");
var object = require("./object.wxs");

function traversing(mods, conf) {
  if (!conf) {
    return;
  }

  if (typeof conf === 'string') {
    mods.push(conf);
  } else if (array.isArray(conf)) {
    conf.forEach(function(item) {
      traversing(mods, item);
    });
  } else if (typeof conf === 'object') {
    object.keys(conf).forEach(function(key) {
      conf[key] && mods.push(key);
    });
  }
}

/**
 * 返回bem的类名规范
 * @param b 块
 * @param e 元素，如果只有块和状态，则元素传null
 * @param mod 状态，状态可以为字符串，数组，如果为数组则遍历多次，对象，对象用于某些属性是否为true
 */
var bem = function (b, e, mod) {
  var mods = [];
  traversing(mods, mod);
  return mods
    .map(function(item) {
      return (
        variable.namespace +
        '-' +
        b +
        (e ? variable.elementSeparator + e : '') +
        (item ? variable.modifierSeparator + item : '')
      );
    })
    .join(' ');
}

/**
 * 返回类名 is-xxx
 * @param mod 状态，可以为数组、对象、字符串
 */
var isWhen = function (mod) {
  var mods = [];
  traversing(mods, mod);
  return mods
    .map(function(item) {
      return (
        'is-' + item
      );
    })
    .join(' ');
}

module.exports = {
  bem: bem,
  isWhen: isWhen
};
